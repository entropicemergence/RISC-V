// Copyright (C) 2022  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "02/13/2023 10:22:27"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          clock
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module clock_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
reg in0;
reg in1;
reg in2;
reg in3;
reg in4;
reg in5;
reg in6;
reg in7;
reg inb0;
reg inb1;
reg inb2;
reg inb3;
reg inb4;
reg inb5;
reg inb6;
reg inb7;
reg [31:0] inr_a;
reg [7:0] inr_a2;
reg [7:0] inr_a3;
reg read_en;
reg write_en;
// wires                                               
wire outa;
wire outb;
wire outc;
wire outd;
wire oute;
wire outf;
wire outg;
wire outh;
wire [31:0] outr1;
wire [7:0] outr2;
wire probe1;
wire probe2;
wire probe3;

// assign statements (if any)                          
clock i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.in0(in0),
	.in1(in1),
	.in2(in2),
	.in3(in3),
	.in4(in4),
	.in5(in5),
	.in6(in6),
	.in7(in7),
	.inb0(inb0),
	.inb1(inb1),
	.inb2(inb2),
	.inb3(inb3),
	.inb4(inb4),
	.inb5(inb5),
	.inb6(inb6),
	.inb7(inb7),
	.inr_a(inr_a),
	.inr_a2(inr_a2),
	.inr_a3(inr_a3),
	.outa(outa),
	.outb(outb),
	.outc(outc),
	.outd(outd),
	.oute(oute),
	.outf(outf),
	.outg(outg),
	.outh(outh),
	.outr1(outr1),
	.outr2(outr2),
	.probe1(probe1),
	.probe2(probe2),
	.probe3(probe3),
	.read_en(read_en),
	.write_en(write_en)
);
initial 
begin 
#1000000 $finish;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #10000 1'b1;
	#10000;
end 

// in0
initial
begin
	in0 = 1'b0;
	in0 = #10000 1'b1;
	in0 = #40000 1'b0;
	in0 = #10000 1'b1;
	in0 = #20000 1'b0;
	in0 = #10000 1'b1;
	in0 = #30000 1'b0;
	in0 = #40000 1'b1;
	in0 = #10000 1'b0;
	in0 = #10000 1'b1;
	in0 = #20000 1'b0;
	in0 = #30000 1'b1;
	in0 = #20000 1'b0;
	in0 = #10000 1'b1;
	in0 = #30000 1'b0;
	in0 = #10000 1'b1;
	in0 = #10000 1'b0;
	in0 = #30000 1'b1;
	in0 = #30000 1'b0;
	in0 = #10000 1'b1;
	in0 = #50000 1'b0;
	in0 = #10000 1'b1;
	in0 = #10000 1'b0;
	in0 = #10000 1'b1;
	in0 = #20000 1'b0;
	in0 = #10000 1'b1;
	in0 = #30000 1'b0;
	in0 = #10000 1'b1;
	in0 = #20000 1'b0;
	in0 = #10000 1'b1;
	in0 = #10000 1'b0;
	in0 = #30000 1'b1;
	in0 = #40000 1'b0;
	in0 = #10000 1'b1;
	in0 = #10000 1'b0;
	in0 = #20000 1'b1;
	in0 = #20000 1'b0;
	in0 = #20000 1'b1;
	in0 = #10000 1'b0;
	in0 = #10000 1'b1;
	in0 = #20000 1'b0;
	in0 = #10000 1'b1;
	in0 = #10000 1'b0;
	in0 = #10000 1'b1;
	in0 = #10000 1'b0;
	in0 = #20000 1'b1;
	in0 = #30000 1'b0;
	in0 = #10000 1'b1;
	in0 = #10000 1'b0;
	in0 = #10000 1'b1;
	in0 = #10000 1'b0;
	in0 = #10000 1'b1;
	in0 = #10000 1'b0;
	in0 = #50000 1'b1;
	in0 = #10000 1'b0;
end 

// in1
initial
begin
	in1 = 1'b1;
	in1 = #10000 1'b0;
	in1 = #20000 1'b1;
	in1 = #20000 1'b0;
	in1 = #50000 1'b1;
	in1 = #10000 1'b0;
	in1 = #20000 1'b1;
	in1 = #20000 1'b0;
	in1 = #10000 1'b1;
	in1 = #10000 1'b0;
	in1 = #10000 1'b1;
	in1 = #10000 1'b0;
	in1 = #10000 1'b1;
	in1 = #10000 1'b0;
	in1 = #10000 1'b1;
	in1 = #10000 1'b0;
	in1 = #20000 1'b1;
	in1 = #20000 1'b0;
	in1 = #20000 1'b1;
	in1 = #10000 1'b0;
	in1 = #10000 1'b1;
	in1 = #10000 1'b0;
	in1 = #30000 1'b1;
	in1 = #10000 1'b0;
	in1 = #10000 1'b1;
	in1 = #30000 1'b0;
	in1 = #10000 1'b1;
	in1 = #20000 1'b0;
	in1 = #10000 1'b1;
	in1 = #10000 1'b0;
	in1 = #40000 1'b1;
	in1 = #10000 1'b0;
	in1 = #20000 1'b1;
	in1 = #10000 1'b0;
	in1 = #20000 1'b1;
	in1 = #50000 1'b0;
	in1 = #10000 1'b1;
	in1 = #10000 1'b0;
	in1 = #20000 1'b1;
	in1 = #10000 1'b0;
	in1 = #10000 1'b1;
	in1 = #40000 1'b0;
	in1 = #30000 1'b1;
	in1 = #30000 1'b0;
	in1 = #20000 1'b1;
	in1 = #10000 1'b0;
	in1 = #20000 1'b1;
	in1 = #10000 1'b0;
	in1 = #20000 1'b1;
	in1 = #30000 1'b0;
	in1 = #10000 1'b1;
	in1 = #20000 1'b0;
	in1 = #10000 1'b1;
	in1 = #40000 1'b0;
	in1 = #10000 1'b1;
	in1 = #10000 1'b0;
	in1 = #10000 1'b1;
end 

// in2
initial
begin
	in2 = 1'b1;
	in2 = #20000 1'b0;
	in2 = #20000 1'b1;
	in2 = #40000 1'b0;
	in2 = #10000 1'b1;
	in2 = #20000 1'b0;
	in2 = #20000 1'b1;
	in2 = #10000 1'b0;
	in2 = #10000 1'b1;
	in2 = #30000 1'b0;
	in2 = #30000 1'b1;
	in2 = #10000 1'b0;
	in2 = #20000 1'b1;
	in2 = #10000 1'b0;
	in2 = #10000 1'b1;
	in2 = #30000 1'b0;
	in2 = #10000 1'b1;
	in2 = #10000 1'b0;
	in2 = #10000 1'b1;
	in2 = #70000 1'b0;
	in2 = #30000 1'b1;
	in2 = #10000 1'b0;
	in2 = #20000 1'b1;
	in2 = #10000 1'b0;
	in2 = #10000 1'b1;
	in2 = #40000 1'b0;
	in2 = #10000 1'b1;
	in2 = #20000 1'b0;
	in2 = #50000 1'b1;
	in2 = #10000 1'b0;
	in2 = #20000 1'b1;
	in2 = #10000 1'b0;
	in2 = #10000 1'b1;
	in2 = #10000 1'b0;
	in2 = #20000 1'b1;
	in2 = #30000 1'b0;
	in2 = #10000 1'b1;
	in2 = #20000 1'b0;
	in2 = #10000 1'b1;
	in2 = #20000 1'b0;
	in2 = #10000 1'b1;
	in2 = #50000 1'b0;
	in2 = #20000 1'b1;
	in2 = #10000 1'b0;
	in2 = #50000 1'b1;
	in2 = #10000 1'b0;
	in2 = #30000 1'b1;
	in2 = #20000 1'b0;
	in2 = #10000 1'b1;
	in2 = #10000 1'b0;
	in2 = #10000 1'b1;
end 

// in3
initial
begin
	in3 = 1'b1;
	in3 = #10000 1'b0;
	in3 = #20000 1'b1;
	in3 = #50000 1'b0;
	in3 = #10000 1'b1;
	in3 = #40000 1'b0;
	in3 = #30000 1'b1;
	in3 = #20000 1'b0;
	in3 = #30000 1'b1;
	in3 = #20000 1'b0;
	in3 = #10000 1'b1;
	in3 = #10000 1'b0;
	in3 = #10000 1'b1;
	in3 = #10000 1'b0;
	in3 = #50000 1'b1;
	in3 = #20000 1'b0;
	in3 = #20000 1'b1;
	in3 = #10000 1'b0;
	in3 = #10000 1'b1;
	in3 = #30000 1'b0;
	in3 = #10000 1'b1;
	in3 = #30000 1'b0;
	in3 = #30000 1'b1;
	in3 = #10000 1'b0;
	in3 = #20000 1'b1;
	in3 = #10000 1'b0;
	in3 = #10000 1'b1;
	in3 = #10000 1'b0;
	in3 = #20000 1'b1;
	in3 = #10000 1'b0;
	in3 = #10000 1'b1;
	in3 = #10000 1'b0;
	in3 = #10000 1'b1;
	in3 = #20000 1'b0;
	in3 = #10000 1'b1;
	in3 = #20000 1'b0;
	in3 = #30000 1'b1;
	in3 = #20000 1'b0;
	in3 = #10000 1'b1;
	in3 = #20000 1'b0;
	in3 = #10000 1'b1;
	in3 = #10000 1'b0;
	in3 = #10000 1'b1;
	in3 = #20000 1'b0;
	in3 = #10000 1'b1;
	in3 = #70000 1'b0;
	in3 = #20000 1'b1;
	in3 = #60000 1'b0;
	in3 = #10000 1'b1;
end 

// in4
initial
begin
	in4 = 1'b1;
	in4 = #10000 1'b0;
	in4 = #20000 1'b1;
	in4 = #10000 1'b0;
	in4 = #50000 1'b1;
	in4 = #20000 1'b0;
	in4 = #40000 1'b1;
	in4 = #10000 1'b0;
	in4 = #30000 1'b1;
	in4 = #20000 1'b0;
	in4 = #10000 1'b1;
	in4 = #10000 1'b0;
	in4 = #10000 1'b1;
	in4 = #30000 1'b0;
	in4 = #20000 1'b1;
	in4 = #10000 1'b0;
	in4 = #20000 1'b1;
	in4 = #10000 1'b0;
	in4 = #60000 1'b1;
	in4 = #30000 1'b0;
	in4 = #20000 1'b1;
	in4 = #20000 1'b0;
	in4 = #10000 1'b1;
	in4 = #10000 1'b0;
	in4 = #10000 1'b1;
	in4 = #30000 1'b0;
	in4 = #30000 1'b1;
	in4 = #10000 1'b0;
	in4 = #30000 1'b1;
	in4 = #20000 1'b0;
	in4 = #30000 1'b1;
	in4 = #10000 1'b0;
	in4 = #20000 1'b1;
	in4 = #20000 1'b0;
	in4 = #20000 1'b1;
	in4 = #20000 1'b0;
	in4 = #40000 1'b1;
	in4 = #20000 1'b0;
	in4 = #30000 1'b1;
	in4 = #10000 1'b0;
	in4 = #20000 1'b1;
	in4 = #20000 1'b0;
	in4 = #10000 1'b1;
	in4 = #10000 1'b0;
	in4 = #30000 1'b1;
	in4 = #20000 1'b0;
	in4 = #10000 1'b1;
	in4 = #30000 1'b0;
end 

// in5
initial
begin
	in5 = 1'b0;
	in5 = #20000 1'b1;
	in5 = #10000 1'b0;
	in5 = #40000 1'b1;
	in5 = #30000 1'b0;
	in5 = #40000 1'b1;
	in5 = #20000 1'b0;
	in5 = #30000 1'b1;
	in5 = #10000 1'b0;
	in5 = #10000 1'b1;
	in5 = #40000 1'b0;
	in5 = #30000 1'b1;
	in5 = #50000 1'b0;
	in5 = #10000 1'b1;
	in5 = #30000 1'b0;
	in5 = #30000 1'b1;
	in5 = #10000 1'b0;
	in5 = #30000 1'b1;
	in5 = #10000 1'b0;
	in5 = #10000 1'b1;
	in5 = #10000 1'b0;
	in5 = #40000 1'b1;
	in5 = #10000 1'b0;
	in5 = #10000 1'b1;
	in5 = #10000 1'b0;
	in5 = #10000 1'b1;
	in5 = #10000 1'b0;
	in5 = #40000 1'b1;
	in5 = #30000 1'b0;
	in5 = #10000 1'b1;
	in5 = #10000 1'b0;
	in5 = #10000 1'b1;
	in5 = #10000 1'b0;
	in5 = #20000 1'b1;
	in5 = #30000 1'b0;
	in5 = #40000 1'b1;
	in5 = #30000 1'b0;
	in5 = #20000 1'b1;
	in5 = #30000 1'b0;
	in5 = #10000 1'b1;
	in5 = #20000 1'b0;
	in5 = #10000 1'b1;
	in5 = #30000 1'b0;
	in5 = #30000 1'b1;
	in5 = #10000 1'b0;
end 

// in6
initial
begin
	in6 = 1'b0;
	in6 = #10000 1'b1;
	in6 = #10000 1'b0;
	in6 = #20000 1'b1;
	in6 = #20000 1'b0;
	in6 = #10000 1'b1;
	in6 = #20000 1'b0;
	in6 = #10000 1'b1;
	in6 = #40000 1'b0;
	in6 = #20000 1'b1;
	in6 = #10000 1'b0;
	in6 = #10000 1'b1;
	in6 = #10000 1'b0;
	in6 = #10000 1'b1;
	in6 = #10000 1'b0;
	in6 = #10000 1'b1;
	in6 = #20000 1'b0;
	in6 = #10000 1'b1;
	in6 = #10000 1'b0;
	in6 = #10000 1'b1;
	in6 = #20000 1'b0;
	in6 = #20000 1'b1;
	in6 = #60000 1'b0;
	in6 = #20000 1'b1;
	in6 = #10000 1'b0;
	in6 = #10000 1'b1;
	in6 = #10000 1'b0;
	in6 = #20000 1'b1;
	in6 = #30000 1'b0;
	in6 = #20000 1'b1;
	in6 = #10000 1'b0;
	in6 = #30000 1'b1;
	in6 = #30000 1'b0;
	in6 = #10000 1'b1;
	in6 = #20000 1'b0;
	in6 = #40000 1'b1;
	in6 = #30000 1'b0;
	in6 = #10000 1'b1;
	in6 = #20000 1'b0;
	in6 = #20000 1'b1;
	in6 = #10000 1'b0;
	in6 = #10000 1'b1;
	in6 = #10000 1'b0;
	in6 = #20000 1'b1;
	in6 = #10000 1'b0;
	in6 = #10000 1'b1;
	in6 = #10000 1'b0;
	in6 = #10000 1'b1;
	in6 = #30000 1'b0;
	in6 = #70000 1'b1;
	in6 = #20000 1'b0;
	in6 = #20000 1'b1;
	in6 = #40000 1'b0;
end 

// in7
initial
begin
	in7 = 1'b1;
	in7 = #50000 1'b0;
	in7 = #10000 1'b1;
	in7 = #10000 1'b0;
	in7 = #10000 1'b1;
	in7 = #10000 1'b0;
	in7 = #40000 1'b1;
	in7 = #10000 1'b0;
	in7 = #40000 1'b1;
	in7 = #10000 1'b0;
	in7 = #20000 1'b1;
	in7 = #20000 1'b0;
	in7 = #10000 1'b1;
	in7 = #10000 1'b0;
	in7 = #10000 1'b1;
	in7 = #40000 1'b0;
	in7 = #20000 1'b1;
	in7 = #10000 1'b0;
	in7 = #20000 1'b1;
	in7 = #20000 1'b0;
	in7 = #20000 1'b1;
	in7 = #30000 1'b0;
	in7 = #30000 1'b1;
	in7 = #20000 1'b0;
	in7 = #10000 1'b1;
	in7 = #10000 1'b0;
	in7 = #10000 1'b1;
	in7 = #10000 1'b0;
	in7 = #10000 1'b1;
	in7 = #20000 1'b0;
	in7 = #20000 1'b1;
	in7 = #20000 1'b0;
	in7 = #40000 1'b1;
	in7 = #10000 1'b0;
	in7 = #10000 1'b1;
	in7 = #30000 1'b0;
	in7 = #20000 1'b1;
	in7 = #10000 1'b0;
	in7 = #30000 1'b1;
	in7 = #20000 1'b0;
	in7 = #10000 1'b1;
	in7 = #10000 1'b0;
	in7 = #10000 1'b1;
	in7 = #30000 1'b0;
	in7 = #10000 1'b1;
	in7 = #10000 1'b0;
	in7 = #10000 1'b1;
	in7 = #10000 1'b0;
	in7 = #10000 1'b1;
	in7 = #10000 1'b0;
	in7 = #10000 1'b1;
	in7 = #20000 1'b0;
	in7 = #30000 1'b1;
	in7 = #40000 1'b0;
	in7 = #20000 1'b1;
end 

// inb0
initial
begin
	inb0 = 1'b1;
end 

// inb1
initial
begin
	inb1 = 1'b1;
end 

// inb2
initial
begin
	inb2 = 1'b1;
end 

// inb3
initial
begin
	inb3 = 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #10000 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #10000 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #10000 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #10000 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #50000 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #20000 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #10000 1'b1;
	inb3 = #20000 1'b0;
	inb3 = #40000 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #10000 1'b1;
	inb3 = #20000 1'b0;
	inb3 = #10000 1'b1;
	inb3 = #20000 1'b0;
	inb3 = #10000 1'b1;
	inb3 = #50000 1'b0;
	inb3 = #70000 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #10000 1'b1;
	inb3 = #30000 1'b0;
	inb3 = #20000 1'b1;
	inb3 = #50000 1'b0;
	inb3 = #50000 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #50000 1'b1;
	inb3 = #30000 1'b0;
	inb3 = #20000 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #10000 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #10000 1'b1;
	inb3 = #20000 1'b0;
	inb3 = #20000 1'b1;
	inb3 = #20000 1'b0;
	inb3 = #10000 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #10000 1'b1;
	inb3 = #20000 1'b0;
	inb3 = #20000 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #10000 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #10000 1'b1;
	inb3 = #10000 1'b0;
	inb3 = #40000 1'b1;
end 

// inb4
initial
begin
	inb4 = 1'b1;
end 

// inb5
initial
begin
	inb5 = 1'b0;
	inb5 = #10000 1'b1;
	inb5 = #10000 1'b0;
	inb5 = #10000 1'b1;
	inb5 = #40000 1'b0;
	inb5 = #10000 1'b1;
	inb5 = #10000 1'b0;
	inb5 = #30000 1'b1;
	inb5 = #10000 1'b0;
	inb5 = #80000 1'b1;
	inb5 = #20000 1'b0;
	inb5 = #30000 1'b1;
	inb5 = #10000 1'b0;
	inb5 = #20000 1'b1;
	inb5 = #10000 1'b0;
	inb5 = #30000 1'b1;
	inb5 = #10000 1'b0;
	inb5 = #30000 1'b1;
	inb5 = #20000 1'b0;
	inb5 = #10000 1'b1;
	inb5 = #30000 1'b0;
	inb5 = #40000 1'b1;
	inb5 = #20000 1'b0;
	inb5 = #10000 1'b1;
	inb5 = #10000 1'b0;
	inb5 = #20000 1'b1;
	inb5 = #10000 1'b0;
	inb5 = #20000 1'b1;
	inb5 = #30000 1'b0;
	inb5 = #50000 1'b1;
	inb5 = #20000 1'b0;
	inb5 = #20000 1'b1;
	inb5 = #10000 1'b0;
	inb5 = #10000 1'b1;
	inb5 = #40000 1'b0;
	inb5 = #20000 1'b1;
	inb5 = #40000 1'b0;
	inb5 = #10000 1'b1;
	inb5 = #20000 1'b0;
	inb5 = #10000 1'b1;
	inb5 = #10000 1'b0;
	inb5 = #30000 1'b1;
	inb5 = #10000 1'b0;
	inb5 = #10000 1'b1;
	inb5 = #20000 1'b0;
	inb5 = #20000 1'b1;
	inb5 = #10000 1'b0;
	inb5 = #10000 1'b1;
	inb5 = #10000 1'b0;
	inb5 = #10000 1'b1;
	inb5 = #10000 1'b0;
end 

// inb6
initial
begin
	inb6 = 1'b1;
end 

// inb7
initial
begin
	inb7 = 1'b1;
end 

// read_en
initial
begin
	read_en = 1'b1;
end 

// write_en
initial
begin
	write_en = 1'b1;
end 
// inr_a[ 31 ]
initial
begin
	inr_a[31] = 1'b0;
	inr_a[31] = #20000 1'b1;
	inr_a[31] = #20000 1'b0;
	inr_a[31] = #100000 1'b1;
	inr_a[31] = #20000 1'b0;
	inr_a[31] = #120000 1'b1;
	inr_a[31] = #60000 1'b0;
	inr_a[31] = #20000 1'b1;
	inr_a[31] = #20000 1'b0;
	inr_a[31] = #100000 1'b1;
	inr_a[31] = #20000 1'b0;
	inr_a[31] = #20000 1'b1;
	inr_a[31] = #20000 1'b0;
	inr_a[31] = #20000 1'b1;
	inr_a[31] = #40000 1'b0;
	inr_a[31] = #20000 1'b1;
	inr_a[31] = #20000 1'b0;
	inr_a[31] = #20000 1'b1;
	inr_a[31] = #40000 1'b0;
	inr_a[31] = #40000 1'b1;
	inr_a[31] = #20000 1'b0;
	inr_a[31] = #60000 1'b1;
	inr_a[31] = #20000 1'b0;
	inr_a[31] = #60000 1'b1;
	inr_a[31] = #20000 1'b0;
	inr_a[31] = #20000 1'b1;
	inr_a[31] = #20000 1'b0;
end 
// inr_a[ 30 ]
initial
begin
	inr_a[30] = 1'b1;
	inr_a[30] = #20000 1'b0;
	inr_a[30] = #20000 1'b1;
	inr_a[30] = #80000 1'b0;
	inr_a[30] = #20000 1'b1;
	inr_a[30] = #100000 1'b0;
	inr_a[30] = #20000 1'b1;
	inr_a[30] = #40000 1'b0;
	inr_a[30] = #20000 1'b1;
	inr_a[30] = #20000 1'b0;
	inr_a[30] = #20000 1'b1;
	inr_a[30] = #40000 1'b0;
	inr_a[30] = #20000 1'b1;
	inr_a[30] = #20000 1'b0;
	inr_a[30] = #20000 1'b1;
	inr_a[30] = #40000 1'b0;
	inr_a[30] = #80000 1'b1;
	inr_a[30] = #80000 1'b0;
	inr_a[30] = #20000 1'b1;
	inr_a[30] = #40000 1'b0;
	inr_a[30] = #80000 1'b1;
	inr_a[30] = #20000 1'b0;
	inr_a[30] = #40000 1'b1;
	inr_a[30] = #40000 1'b0;
	inr_a[30] = #20000 1'b1;
	inr_a[30] = #40000 1'b0;
	inr_a[30] = #20000 1'b1;
end 
// inr_a[ 29 ]
initial
begin
	inr_a[29] = 1'b1;
	inr_a[29] = #40000 1'b0;
	inr_a[29] = #60000 1'b1;
	inr_a[29] = #20000 1'b0;
	inr_a[29] = #40000 1'b1;
	inr_a[29] = #20000 1'b0;
	inr_a[29] = #20000 1'b1;
	inr_a[29] = #40000 1'b0;
	inr_a[29] = #40000 1'b1;
	inr_a[29] = #40000 1'b0;
	inr_a[29] = #20000 1'b1;
	inr_a[29] = #40000 1'b0;
	inr_a[29] = #80000 1'b1;
	inr_a[29] = #60000 1'b0;
	inr_a[29] = #40000 1'b1;
	inr_a[29] = #20000 1'b0;
	inr_a[29] = #20000 1'b1;
	inr_a[29] = #40000 1'b0;
	inr_a[29] = #20000 1'b1;
	inr_a[29] = #40000 1'b0;
	inr_a[29] = #20000 1'b1;
	inr_a[29] = #20000 1'b0;
	inr_a[29] = #20000 1'b1;
	inr_a[29] = #20000 1'b0;
	inr_a[29] = #20000 1'b1;
	inr_a[29] = #20000 1'b0;
	inr_a[29] = #100000 1'b1;
	inr_a[29] = #40000 1'b0;
end 
// inr_a[ 28 ]
initial
begin
	inr_a[28] = 1'b1;
	inr_a[28] = #40000 1'b0;
	inr_a[28] = #40000 1'b1;
	inr_a[28] = #40000 1'b0;
	inr_a[28] = #40000 1'b1;
	inr_a[28] = #60000 1'b0;
	inr_a[28] = #20000 1'b1;
	inr_a[28] = #20000 1'b0;
	inr_a[28] = #20000 1'b1;
	inr_a[28] = #40000 1'b0;
	inr_a[28] = #40000 1'b1;
	inr_a[28] = #60000 1'b0;
	inr_a[28] = #40000 1'b1;
	inr_a[28] = #80000 1'b0;
	inr_a[28] = #20000 1'b1;
	inr_a[28] = #20000 1'b0;
	inr_a[28] = #20000 1'b1;
	inr_a[28] = #80000 1'b0;
	inr_a[28] = #80000 1'b1;
	inr_a[28] = #40000 1'b0;
	inr_a[28] = #20000 1'b1;
	inr_a[28] = #40000 1'b0;
	inr_a[28] = #100000 1'b1;
end 
// inr_a[ 27 ]
initial
begin
	inr_a[27] = 1'b0;
	inr_a[27] = #20000 1'b1;
	inr_a[27] = #20000 1'b0;
	inr_a[27] = #60000 1'b1;
	inr_a[27] = #60000 1'b0;
	inr_a[27] = #40000 1'b1;
	inr_a[27] = #20000 1'b0;
	inr_a[27] = #20000 1'b1;
	inr_a[27] = #40000 1'b0;
	inr_a[27] = #20000 1'b1;
	inr_a[27] = #120000 1'b0;
	inr_a[27] = #80000 1'b1;
	inr_a[27] = #120000 1'b0;
	inr_a[27] = #20000 1'b1;
	inr_a[27] = #80000 1'b0;
	inr_a[27] = #20000 1'b1;
	inr_a[27] = #140000 1'b0;
	inr_a[27] = #60000 1'b1;
	inr_a[27] = #40000 1'b0;
end 
// inr_a[ 26 ]
initial
begin
	inr_a[26] = 1'b0;
	inr_a[26] = #60000 1'b1;
	inr_a[26] = #20000 1'b0;
	inr_a[26] = #80000 1'b1;
	inr_a[26] = #40000 1'b0;
	inr_a[26] = #60000 1'b1;
	inr_a[26] = #20000 1'b0;
	inr_a[26] = #40000 1'b1;
	inr_a[26] = #60000 1'b0;
	inr_a[26] = #20000 1'b1;
	inr_a[26] = #40000 1'b0;
	inr_a[26] = #40000 1'b1;
	inr_a[26] = #20000 1'b0;
	inr_a[26] = #40000 1'b1;
	inr_a[26] = #20000 1'b0;
	inr_a[26] = #140000 1'b1;
	inr_a[26] = #80000 1'b0;
	inr_a[26] = #80000 1'b1;
	inr_a[26] = #100000 1'b0;
end 
// inr_a[ 25 ]
initial
begin
	inr_a[25] = 1'b0;
	inr_a[25] = #20000 1'b1;
	inr_a[25] = #40000 1'b0;
	inr_a[25] = #60000 1'b1;
	inr_a[25] = #20000 1'b0;
	inr_a[25] = #20000 1'b1;
	inr_a[25] = #60000 1'b0;
	inr_a[25] = #60000 1'b1;
	inr_a[25] = #40000 1'b0;
	inr_a[25] = #40000 1'b1;
	inr_a[25] = #20000 1'b0;
	inr_a[25] = #80000 1'b1;
	inr_a[25] = #20000 1'b0;
	inr_a[25] = #20000 1'b1;
	inr_a[25] = #40000 1'b0;
	inr_a[25] = #20000 1'b1;
	inr_a[25] = #20000 1'b0;
	inr_a[25] = #20000 1'b1;
	inr_a[25] = #20000 1'b0;
	inr_a[25] = #20000 1'b1;
	inr_a[25] = #40000 1'b0;
	inr_a[25] = #40000 1'b1;
	inr_a[25] = #40000 1'b0;
	inr_a[25] = #20000 1'b1;
	inr_a[25] = #80000 1'b0;
	inr_a[25] = #40000 1'b1;
	inr_a[25] = #60000 1'b0;
	inr_a[25] = #20000 1'b1;
end 
// inr_a[ 24 ]
initial
begin
	inr_a[24] = 1'b1;
	inr_a[24] = #40000 1'b0;
	inr_a[24] = #100000 1'b1;
	inr_a[24] = #20000 1'b0;
	inr_a[24] = #20000 1'b1;
	inr_a[24] = #20000 1'b0;
	inr_a[24] = #40000 1'b1;
	inr_a[24] = #60000 1'b0;
	inr_a[24] = #20000 1'b1;
	inr_a[24] = #100000 1'b0;
	inr_a[24] = #20000 1'b1;
	inr_a[24] = #20000 1'b0;
	inr_a[24] = #20000 1'b1;
	inr_a[24] = #20000 1'b0;
	inr_a[24] = #20000 1'b1;
	inr_a[24] = #20000 1'b0;
	inr_a[24] = #40000 1'b1;
	inr_a[24] = #60000 1'b0;
	inr_a[24] = #20000 1'b1;
	inr_a[24] = #60000 1'b0;
	inr_a[24] = #20000 1'b1;
	inr_a[24] = #20000 1'b0;
	inr_a[24] = #20000 1'b1;
	inr_a[24] = #40000 1'b0;
	inr_a[24] = #20000 1'b1;
	inr_a[24] = #20000 1'b0;
	inr_a[24] = #40000 1'b1;
	inr_a[24] = #20000 1'b0;
	inr_a[24] = #20000 1'b1;
end 
// inr_a[ 23 ]
initial
begin
	inr_a[23] = 1'b1;
	inr_a[23] = #20000 1'b0;
	inr_a[23] = #20000 1'b1;
	inr_a[23] = #40000 1'b0;
	inr_a[23] = #20000 1'b1;
	inr_a[23] = #40000 1'b0;
	inr_a[23] = #20000 1'b1;
	inr_a[23] = #60000 1'b0;
	inr_a[23] = #20000 1'b1;
	inr_a[23] = #40000 1'b0;
	inr_a[23] = #20000 1'b1;
	inr_a[23] = #40000 1'b0;
	inr_a[23] = #60000 1'b1;
	inr_a[23] = #20000 1'b0;
	inr_a[23] = #20000 1'b1;
	inr_a[23] = #20000 1'b0;
	inr_a[23] = #40000 1'b1;
	inr_a[23] = #40000 1'b0;
	inr_a[23] = #60000 1'b1;
	inr_a[23] = #20000 1'b0;
	inr_a[23] = #20000 1'b1;
	inr_a[23] = #20000 1'b0;
	inr_a[23] = #80000 1'b1;
	inr_a[23] = #20000 1'b0;
	inr_a[23] = #60000 1'b1;
	inr_a[23] = #20000 1'b0;
end 
// inr_a[ 22 ]
initial
begin
	inr_a[22] = 1'b0;
	inr_a[22] = #20000 1'b1;
	inr_a[22] = #40000 1'b0;
	inr_a[22] = #20000 1'b1;
	inr_a[22] = #20000 1'b0;
	inr_a[22] = #20000 1'b1;
	inr_a[22] = #20000 1'b0;
	inr_a[22] = #20000 1'b1;
	inr_a[22] = #40000 1'b0;
	inr_a[22] = #40000 1'b1;
	inr_a[22] = #20000 1'b0;
	inr_a[22] = #20000 1'b1;
	inr_a[22] = #20000 1'b0;
	inr_a[22] = #20000 1'b1;
	inr_a[22] = #60000 1'b0;
	inr_a[22] = #20000 1'b1;
	inr_a[22] = #20000 1'b0;
	inr_a[22] = #20000 1'b1;
	inr_a[22] = #20000 1'b0;
	inr_a[22] = #20000 1'b1;
	inr_a[22] = #20000 1'b0;
	inr_a[22] = #20000 1'b1;
	inr_a[22] = #40000 1'b0;
	inr_a[22] = #20000 1'b1;
	inr_a[22] = #20000 1'b0;
	inr_a[22] = #40000 1'b1;
	inr_a[22] = #20000 1'b0;
	inr_a[22] = #40000 1'b1;
	inr_a[22] = #40000 1'b0;
	inr_a[22] = #20000 1'b1;
	inr_a[22] = #40000 1'b0;
	inr_a[22] = #60000 1'b1;
	inr_a[22] = #60000 1'b0;
end 
// inr_a[ 21 ]
initial
begin
	inr_a[21] = 1'b0;
	inr_a[21] = #20000 1'b1;
	inr_a[21] = #20000 1'b0;
	inr_a[21] = #140000 1'b1;
	inr_a[21] = #20000 1'b0;
	inr_a[21] = #60000 1'b1;
	inr_a[21] = #140000 1'b0;
	inr_a[21] = #20000 1'b1;
	inr_a[21] = #60000 1'b0;
	inr_a[21] = #60000 1'b1;
	inr_a[21] = #20000 1'b0;
	inr_a[21] = #20000 1'b1;
	inr_a[21] = #80000 1'b0;
	inr_a[21] = #20000 1'b1;
	inr_a[21] = #20000 1'b0;
	inr_a[21] = #20000 1'b1;
	inr_a[21] = #20000 1'b0;
	inr_a[21] = #100000 1'b1;
	inr_a[21] = #20000 1'b0;
	inr_a[21] = #20000 1'b1;
	inr_a[21] = #20000 1'b0;
	inr_a[21] = #20000 1'b1;
	inr_a[21] = #20000 1'b0;
	inr_a[21] = #40000 1'b1;
end 
// inr_a[ 20 ]
initial
begin
	inr_a[20] = 1'b0;
	inr_a[20] = #20000 1'b1;
	inr_a[20] = #40000 1'b0;
	inr_a[20] = #100000 1'b1;
	inr_a[20] = #20000 1'b0;
	inr_a[20] = #140000 1'b1;
	inr_a[20] = #80000 1'b0;
	inr_a[20] = #40000 1'b1;
	inr_a[20] = #100000 1'b0;
	inr_a[20] = #40000 1'b1;
	inr_a[20] = #100000 1'b0;
	inr_a[20] = #20000 1'b1;
	inr_a[20] = #20000 1'b0;
	inr_a[20] = #20000 1'b1;
	inr_a[20] = #40000 1'b0;
	inr_a[20] = #20000 1'b1;
	inr_a[20] = #40000 1'b0;
	inr_a[20] = #80000 1'b1;
	inr_a[20] = #40000 1'b0;
	inr_a[20] = #20000 1'b1;
end 
// inr_a[ 19 ]
initial
begin
	inr_a[19] = 1'b0;
	inr_a[19] = #20000 1'b1;
	inr_a[19] = #40000 1'b0;
	inr_a[19] = #20000 1'b1;
	inr_a[19] = #20000 1'b0;
	inr_a[19] = #80000 1'b1;
	inr_a[19] = #80000 1'b0;
	inr_a[19] = #40000 1'b1;
	inr_a[19] = #40000 1'b0;
	inr_a[19] = #80000 1'b1;
	inr_a[19] = #20000 1'b0;
	inr_a[19] = #80000 1'b1;
	inr_a[19] = #80000 1'b0;
	inr_a[19] = #80000 1'b1;
	inr_a[19] = #20000 1'b0;
	inr_a[19] = #20000 1'b1;
	inr_a[19] = #20000 1'b0;
	inr_a[19] = #40000 1'b1;
	inr_a[19] = #20000 1'b0;
	inr_a[19] = #80000 1'b1;
	inr_a[19] = #20000 1'b0;
	inr_a[19] = #60000 1'b1;
	inr_a[19] = #20000 1'b0;
end 
// inr_a[ 18 ]
initial
begin
	inr_a[18] = 1'b0;
	inr_a[18] = #20000 1'b1;
	inr_a[18] = #60000 1'b0;
	inr_a[18] = #20000 1'b1;
	inr_a[18] = #120000 1'b0;
	inr_a[18] = #20000 1'b1;
	inr_a[18] = #20000 1'b0;
	inr_a[18] = #40000 1'b1;
	inr_a[18] = #20000 1'b0;
	inr_a[18] = #40000 1'b1;
	inr_a[18] = #40000 1'b0;
	inr_a[18] = #20000 1'b1;
	inr_a[18] = #20000 1'b0;
	inr_a[18] = #20000 1'b1;
	inr_a[18] = #40000 1'b0;
	inr_a[18] = #80000 1'b1;
	inr_a[18] = #20000 1'b0;
	inr_a[18] = #40000 1'b1;
	inr_a[18] = #20000 1'b0;
	inr_a[18] = #40000 1'b1;
	inr_a[18] = #40000 1'b0;
	inr_a[18] = #20000 1'b1;
	inr_a[18] = #20000 1'b0;
	inr_a[18] = #20000 1'b1;
	inr_a[18] = #20000 1'b0;
	inr_a[18] = #20000 1'b1;
	inr_a[18] = #40000 1'b0;
	inr_a[18] = #20000 1'b1;
	inr_a[18] = #20000 1'b0;
	inr_a[18] = #40000 1'b1;
	inr_a[18] = #20000 1'b0;
end 
// inr_a[ 17 ]
initial
begin
	inr_a[17] = 1'b1;
	inr_a[17] = #60000 1'b0;
	inr_a[17] = #80000 1'b1;
	inr_a[17] = #60000 1'b0;
	inr_a[17] = #20000 1'b1;
	inr_a[17] = #20000 1'b0;
	inr_a[17] = #20000 1'b1;
	inr_a[17] = #40000 1'b0;
	inr_a[17] = #20000 1'b1;
	inr_a[17] = #100000 1'b0;
	inr_a[17] = #60000 1'b1;
	inr_a[17] = #20000 1'b0;
	inr_a[17] = #20000 1'b1;
	inr_a[17] = #40000 1'b0;
	inr_a[17] = #40000 1'b1;
	inr_a[17] = #40000 1'b0;
	inr_a[17] = #20000 1'b1;
	inr_a[17] = #60000 1'b0;
	inr_a[17] = #40000 1'b1;
	inr_a[17] = #60000 1'b0;
	inr_a[17] = #20000 1'b1;
	inr_a[17] = #40000 1'b0;
	inr_a[17] = #40000 1'b1;
end 
// inr_a[ 16 ]
initial
begin
	inr_a[16] = 1'b0;
	inr_a[16] = #20000 1'b1;
	inr_a[16] = #60000 1'b0;
	inr_a[16] = #20000 1'b1;
	inr_a[16] = #40000 1'b0;
	inr_a[16] = #20000 1'b1;
	inr_a[16] = #20000 1'b0;
	inr_a[16] = #20000 1'b1;
	inr_a[16] = #20000 1'b0;
	inr_a[16] = #40000 1'b1;
	inr_a[16] = #20000 1'b0;
	inr_a[16] = #20000 1'b1;
	inr_a[16] = #20000 1'b0;
	inr_a[16] = #120000 1'b1;
	inr_a[16] = #20000 1'b0;
	inr_a[16] = #40000 1'b1;
	inr_a[16] = #20000 1'b0;
	inr_a[16] = #20000 1'b1;
	inr_a[16] = #20000 1'b0;
	inr_a[16] = #40000 1'b1;
	inr_a[16] = #20000 1'b0;
	inr_a[16] = #20000 1'b1;
	inr_a[16] = #60000 1'b0;
	inr_a[16] = #40000 1'b1;
	inr_a[16] = #20000 1'b0;
	inr_a[16] = #40000 1'b1;
	inr_a[16] = #20000 1'b0;
	inr_a[16] = #40000 1'b1;
	inr_a[16] = #40000 1'b0;
	inr_a[16] = #20000 1'b1;
	inr_a[16] = #20000 1'b0;
end 
// inr_a[ 15 ]
initial
begin
	inr_a[15] = 1'b0;
	inr_a[15] = #40000 1'b1;
	inr_a[15] = #20000 1'b0;
	inr_a[15] = #60000 1'b1;
	inr_a[15] = #20000 1'b0;
	inr_a[15] = #40000 1'b1;
	inr_a[15] = #20000 1'b0;
	inr_a[15] = #40000 1'b1;
	inr_a[15] = #80000 1'b0;
	inr_a[15] = #20000 1'b1;
	inr_a[15] = #20000 1'b0;
	inr_a[15] = #20000 1'b1;
	inr_a[15] = #40000 1'b0;
	inr_a[15] = #60000 1'b1;
	inr_a[15] = #20000 1'b0;
	inr_a[15] = #20000 1'b1;
	inr_a[15] = #20000 1'b0;
	inr_a[15] = #80000 1'b1;
	inr_a[15] = #60000 1'b0;
	inr_a[15] = #40000 1'b1;
	inr_a[15] = #60000 1'b0;
	inr_a[15] = #20000 1'b1;
	inr_a[15] = #20000 1'b0;
	inr_a[15] = #40000 1'b1;
	inr_a[15] = #40000 1'b0;
	inr_a[15] = #20000 1'b1;
	inr_a[15] = #20000 1'b0;
end 
// inr_a[ 14 ]
initial
begin
	inr_a[14] = 1'b1;
	inr_a[14] = #20000 1'b0;
	inr_a[14] = #20000 1'b1;
	inr_a[14] = #20000 1'b0;
	inr_a[14] = #120000 1'b1;
	inr_a[14] = #40000 1'b0;
	inr_a[14] = #80000 1'b1;
	inr_a[14] = #40000 1'b0;
	inr_a[14] = #40000 1'b1;
	inr_a[14] = #20000 1'b0;
	inr_a[14] = #20000 1'b1;
	inr_a[14] = #40000 1'b0;
	inr_a[14] = #20000 1'b1;
	inr_a[14] = #100000 1'b0;
	inr_a[14] = #20000 1'b1;
	inr_a[14] = #20000 1'b0;
	inr_a[14] = #60000 1'b1;
	inr_a[14] = #60000 1'b0;
	inr_a[14] = #60000 1'b1;
	inr_a[14] = #60000 1'b0;
	inr_a[14] = #40000 1'b1;
	inr_a[14] = #20000 1'b0;
	inr_a[14] = #20000 1'b1;
	inr_a[14] = #40000 1'b0;
end 
// inr_a[ 13 ]
initial
begin
	inr_a[13] = 1'b1;
	inr_a[13] = #60000 1'b0;
	inr_a[13] = #20000 1'b1;
	inr_a[13] = #20000 1'b0;
	inr_a[13] = #20000 1'b1;
	inr_a[13] = #40000 1'b0;
	inr_a[13] = #20000 1'b1;
	inr_a[13] = #60000 1'b0;
	inr_a[13] = #40000 1'b1;
	inr_a[13] = #20000 1'b0;
	inr_a[13] = #60000 1'b1;
	inr_a[13] = #20000 1'b0;
	inr_a[13] = #20000 1'b1;
	inr_a[13] = #20000 1'b0;
	inr_a[13] = #20000 1'b1;
	inr_a[13] = #20000 1'b0;
	inr_a[13] = #60000 1'b1;
	inr_a[13] = #20000 1'b0;
	inr_a[13] = #20000 1'b1;
	inr_a[13] = #60000 1'b0;
	inr_a[13] = #40000 1'b1;
	inr_a[13] = #40000 1'b0;
	inr_a[13] = #40000 1'b1;
	inr_a[13] = #40000 1'b0;
	inr_a[13] = #80000 1'b1;
	inr_a[13] = #40000 1'b0;
	inr_a[13] = #20000 1'b1;
	inr_a[13] = #20000 1'b0;
	inr_a[13] = #20000 1'b1;
end 
// inr_a[ 12 ]
initial
begin
	inr_a[12] = 1'b0;
	inr_a[12] = #40000 1'b1;
	inr_a[12] = #40000 1'b0;
	inr_a[12] = #20000 1'b1;
	inr_a[12] = #20000 1'b0;
	inr_a[12] = #60000 1'b1;
	inr_a[12] = #40000 1'b0;
	inr_a[12] = #80000 1'b1;
	inr_a[12] = #20000 1'b0;
	inr_a[12] = #40000 1'b1;
	inr_a[12] = #40000 1'b0;
	inr_a[12] = #40000 1'b1;
	inr_a[12] = #60000 1'b0;
	inr_a[12] = #40000 1'b1;
	inr_a[12] = #40000 1'b0;
	inr_a[12] = #20000 1'b1;
	inr_a[12] = #20000 1'b0;
	inr_a[12] = #80000 1'b1;
	inr_a[12] = #40000 1'b0;
	inr_a[12] = #60000 1'b1;
	inr_a[12] = #20000 1'b0;
	inr_a[12] = #20000 1'b1;
	inr_a[12] = #40000 1'b0;
	inr_a[12] = #60000 1'b1;
end 
// inr_a[ 11 ]
initial
begin
	inr_a[11] = 1'b0;
	inr_a[11] = #120000 1'b1;
	inr_a[11] = #20000 1'b0;
	inr_a[11] = #40000 1'b1;
	inr_a[11] = #40000 1'b0;
	inr_a[11] = #20000 1'b1;
	inr_a[11] = #20000 1'b0;
	inr_a[11] = #20000 1'b1;
	inr_a[11] = #20000 1'b0;
	inr_a[11] = #20000 1'b1;
	inr_a[11] = #20000 1'b0;
	inr_a[11] = #20000 1'b1;
	inr_a[11] = #20000 1'b0;
	inr_a[11] = #40000 1'b1;
	inr_a[11] = #20000 1'b0;
	inr_a[11] = #40000 1'b1;
	inr_a[11] = #60000 1'b0;
	inr_a[11] = #40000 1'b1;
	inr_a[11] = #20000 1'b0;
	inr_a[11] = #20000 1'b1;
	inr_a[11] = #20000 1'b0;
	inr_a[11] = #20000 1'b1;
	inr_a[11] = #40000 1'b0;
	inr_a[11] = #20000 1'b1;
	inr_a[11] = #120000 1'b0;
	inr_a[11] = #20000 1'b1;
	inr_a[11] = #100000 1'b0;
	inr_a[11] = #20000 1'b1;
end 
// inr_a[ 10 ]
initial
begin
	inr_a[10] = 1'b0;
	inr_a[10] = #20000 1'b1;
	inr_a[10] = #60000 1'b0;
	inr_a[10] = #40000 1'b1;
	inr_a[10] = #40000 1'b0;
	inr_a[10] = #200000 1'b1;
	inr_a[10] = #60000 1'b0;
	inr_a[10] = #40000 1'b1;
	inr_a[10] = #80000 1'b0;
	inr_a[10] = #40000 1'b1;
	inr_a[10] = #60000 1'b0;
	inr_a[10] = #40000 1'b1;
	inr_a[10] = #60000 1'b0;
	inr_a[10] = #40000 1'b1;
	inr_a[10] = #20000 1'b0;
	inr_a[10] = #60000 1'b1;
	inr_a[10] = #20000 1'b0;
	inr_a[10] = #20000 1'b1;
	inr_a[10] = #20000 1'b0;
end 
// inr_a[ 9 ]
initial
begin
	inr_a[9] = 1'b1;
	inr_a[9] = #100000 1'b0;
	inr_a[9] = #40000 1'b1;
	inr_a[9] = #20000 1'b0;
	inr_a[9] = #40000 1'b1;
	inr_a[9] = #40000 1'b0;
	inr_a[9] = #100000 1'b1;
	inr_a[9] = #60000 1'b0;
	inr_a[9] = #40000 1'b1;
	inr_a[9] = #100000 1'b0;
	inr_a[9] = #40000 1'b1;
	inr_a[9] = #20000 1'b0;
	inr_a[9] = #60000 1'b1;
	inr_a[9] = #20000 1'b0;
	inr_a[9] = #60000 1'b1;
	inr_a[9] = #20000 1'b0;
	inr_a[9] = #80000 1'b1;
	inr_a[9] = #60000 1'b0;
	inr_a[9] = #20000 1'b1;
	inr_a[9] = #60000 1'b0;
end 
// inr_a[ 8 ]
initial
begin
	inr_a[8] = 1'b0;
	inr_a[8] = #20000 1'b1;
	inr_a[8] = #20000 1'b0;
	inr_a[8] = #60000 1'b1;
	inr_a[8] = #40000 1'b0;
	inr_a[8] = #20000 1'b1;
	inr_a[8] = #100000 1'b0;
	inr_a[8] = #40000 1'b1;
	inr_a[8] = #60000 1'b0;
	inr_a[8] = #40000 1'b1;
	inr_a[8] = #20000 1'b0;
	inr_a[8] = #20000 1'b1;
	inr_a[8] = #60000 1'b0;
	inr_a[8] = #20000 1'b1;
	inr_a[8] = #20000 1'b0;
	inr_a[8] = #100000 1'b1;
	inr_a[8] = #20000 1'b0;
	inr_a[8] = #80000 1'b1;
	inr_a[8] = #20000 1'b0;
	inr_a[8] = #20000 1'b1;
	inr_a[8] = #20000 1'b0;
	inr_a[8] = #40000 1'b1;
	inr_a[8] = #60000 1'b0;
	inr_a[8] = #20000 1'b1;
	inr_a[8] = #20000 1'b0;
end 
// inr_a[ 7 ]
initial
begin
	inr_a[7] = 1'b1;
	inr_a[7] = #20000 1'b0;
	inr_a[7] = #80000 1'b1;
	inr_a[7] = #40000 1'b0;
	inr_a[7] = #20000 1'b1;
	inr_a[7] = #20000 1'b0;
	inr_a[7] = #20000 1'b1;
	inr_a[7] = #100000 1'b0;
	inr_a[7] = #60000 1'b1;
	inr_a[7] = #20000 1'b0;
	inr_a[7] = #20000 1'b1;
	inr_a[7] = #40000 1'b0;
	inr_a[7] = #20000 1'b1;
	inr_a[7] = #20000 1'b0;
	inr_a[7] = #60000 1'b1;
	inr_a[7] = #40000 1'b0;
	inr_a[7] = #40000 1'b1;
	inr_a[7] = #60000 1'b0;
	inr_a[7] = #20000 1'b1;
	inr_a[7] = #80000 1'b0;
	inr_a[7] = #40000 1'b1;
	inr_a[7] = #20000 1'b0;
	inr_a[7] = #40000 1'b1;
	inr_a[7] = #40000 1'b0;
	inr_a[7] = #20000 1'b1;
end 
// inr_a[ 6 ]
initial
begin
	inr_a[6] = 1'b0;
	inr_a[6] = #20000 1'b1;
	inr_a[6] = #80000 1'b0;
	inr_a[6] = #20000 1'b1;
	inr_a[6] = #20000 1'b0;
	inr_a[6] = #20000 1'b1;
	inr_a[6] = #60000 1'b0;
	inr_a[6] = #60000 1'b1;
	inr_a[6] = #20000 1'b0;
	inr_a[6] = #20000 1'b1;
	inr_a[6] = #20000 1'b0;
	inr_a[6] = #40000 1'b1;
	inr_a[6] = #20000 1'b0;
	inr_a[6] = #60000 1'b1;
	inr_a[6] = #40000 1'b0;
	inr_a[6] = #40000 1'b1;
	inr_a[6] = #40000 1'b0;
	inr_a[6] = #20000 1'b1;
	inr_a[6] = #20000 1'b0;
	inr_a[6] = #40000 1'b1;
	inr_a[6] = #20000 1'b0;
	inr_a[6] = #40000 1'b1;
	inr_a[6] = #40000 1'b0;
	inr_a[6] = #20000 1'b1;
	inr_a[6] = #40000 1'b0;
	inr_a[6] = #40000 1'b1;
	inr_a[6] = #20000 1'b0;
	inr_a[6] = #60000 1'b1;
	inr_a[6] = #20000 1'b0;
end 
// inr_a[ 5 ]
initial
begin
	inr_a[5] = 1'b0;
	inr_a[5] = #40000 1'b1;
	inr_a[5] = #60000 1'b0;
	inr_a[5] = #40000 1'b1;
	inr_a[5] = #20000 1'b0;
	inr_a[5] = #20000 1'b1;
	inr_a[5] = #60000 1'b0;
	inr_a[5] = #20000 1'b1;
	inr_a[5] = #40000 1'b0;
	inr_a[5] = #40000 1'b1;
	inr_a[5] = #80000 1'b0;
	inr_a[5] = #60000 1'b1;
	inr_a[5] = #20000 1'b0;
	inr_a[5] = #80000 1'b1;
	inr_a[5] = #20000 1'b0;
	inr_a[5] = #20000 1'b1;
	inr_a[5] = #20000 1'b0;
	inr_a[5] = #40000 1'b1;
	inr_a[5] = #40000 1'b0;
	inr_a[5] = #40000 1'b1;
	inr_a[5] = #40000 1'b0;
	inr_a[5] = #60000 1'b1;
	inr_a[5] = #60000 1'b0;
	inr_a[5] = #20000 1'b1;
end 
// inr_a[ 4 ]
initial
begin
	inr_a[4] = 1'b0;
	inr_a[4] = #40000 1'b1;
	inr_a[4] = #80000 1'b0;
	inr_a[4] = #40000 1'b1;
	inr_a[4] = #20000 1'b0;
	inr_a[4] = #20000 1'b1;
	inr_a[4] = #60000 1'b0;
	inr_a[4] = #80000 1'b1;
	inr_a[4] = #60000 1'b0;
	inr_a[4] = #60000 1'b1;
	inr_a[4] = #60000 1'b0;
	inr_a[4] = #80000 1'b1;
	inr_a[4] = #20000 1'b0;
	inr_a[4] = #20000 1'b1;
	inr_a[4] = #20000 1'b0;
	inr_a[4] = #20000 1'b1;
	inr_a[4] = #80000 1'b0;
	inr_a[4] = #20000 1'b1;
	inr_a[4] = #80000 1'b0;
	inr_a[4] = #20000 1'b1;
	inr_a[4] = #40000 1'b0;
	inr_a[4] = #20000 1'b1;
	inr_a[4] = #20000 1'b0;
	inr_a[4] = #20000 1'b1;
end 
// inr_a[ 3 ]
initial
begin
	inr_a[3] = 1'b0;
	inr_a[3] = #40000 1'b1;
	inr_a[3] = #20000 1'b0;
	inr_a[3] = #20000 1'b1;
	inr_a[3] = #20000 1'b0;
	inr_a[3] = #40000 1'b1;
	inr_a[3] = #80000 1'b0;
	inr_a[3] = #40000 1'b1;
	inr_a[3] = #20000 1'b0;
	inr_a[3] = #20000 1'b1;
	inr_a[3] = #60000 1'b0;
	inr_a[3] = #40000 1'b1;
	inr_a[3] = #20000 1'b0;
	inr_a[3] = #40000 1'b1;
	inr_a[3] = #20000 1'b0;
	inr_a[3] = #20000 1'b1;
	inr_a[3] = #40000 1'b0;
	inr_a[3] = #40000 1'b1;
	inr_a[3] = #60000 1'b0;
	inr_a[3] = #80000 1'b1;
	inr_a[3] = #40000 1'b0;
	inr_a[3] = #20000 1'b1;
	inr_a[3] = #40000 1'b0;
	inr_a[3] = #20000 1'b1;
	inr_a[3] = #40000 1'b0;
	inr_a[3] = #20000 1'b1;
	inr_a[3] = #80000 1'b0;
end 
// inr_a[ 2 ]
initial
begin
	inr_a[2] = 1'b1;
	inr_a[2] = #80000 1'b0;
	inr_a[2] = #40000 1'b1;
	inr_a[2] = #40000 1'b0;
	inr_a[2] = #20000 1'b1;
	inr_a[2] = #180000 1'b0;
	inr_a[2] = #60000 1'b1;
	inr_a[2] = #40000 1'b0;
	inr_a[2] = #20000 1'b1;
	inr_a[2] = #20000 1'b0;
	inr_a[2] = #20000 1'b1;
	inr_a[2] = #60000 1'b0;
	inr_a[2] = #20000 1'b1;
	inr_a[2] = #120000 1'b0;
	inr_a[2] = #40000 1'b1;
	inr_a[2] = #60000 1'b0;
	inr_a[2] = #20000 1'b1;
	inr_a[2] = #40000 1'b0;
	inr_a[2] = #20000 1'b1;
	inr_a[2] = #20000 1'b0;
	inr_a[2] = #60000 1'b1;
end 
// inr_a[ 1 ]
initial
begin
	inr_a[1] = 1'b1;
	inr_a[1] = #40000 1'b0;
	inr_a[1] = #20000 1'b1;
	inr_a[1] = #40000 1'b0;
	inr_a[1] = #60000 1'b1;
	inr_a[1] = #20000 1'b0;
	inr_a[1] = #20000 1'b1;
	inr_a[1] = #20000 1'b0;
	inr_a[1] = #20000 1'b1;
	inr_a[1] = #40000 1'b0;
	inr_a[1] = #40000 1'b1;
	inr_a[1] = #20000 1'b0;
	inr_a[1] = #80000 1'b1;
	inr_a[1] = #60000 1'b0;
	inr_a[1] = #40000 1'b1;
	inr_a[1] = #20000 1'b0;
	inr_a[1] = #20000 1'b1;
	inr_a[1] = #80000 1'b0;
	inr_a[1] = #20000 1'b1;
	inr_a[1] = #40000 1'b0;
	inr_a[1] = #20000 1'b1;
	inr_a[1] = #80000 1'b0;
	inr_a[1] = #20000 1'b1;
	inr_a[1] = #20000 1'b0;
	inr_a[1] = #20000 1'b1;
	inr_a[1] = #60000 1'b0;
	inr_a[1] = #20000 1'b1;
end 
// inr_a[ 0 ]
initial
begin
	inr_a[0] = 1'b1;
	inr_a[0] = #20000 1'b0;
	inr_a[0] = #100000 1'b1;
	inr_a[0] = #20000 1'b0;
	inr_a[0] = #20000 1'b1;
	inr_a[0] = #40000 1'b0;
	inr_a[0] = #40000 1'b1;
	inr_a[0] = #40000 1'b0;
	inr_a[0] = #20000 1'b1;
	inr_a[0] = #80000 1'b0;
	inr_a[0] = #20000 1'b1;
	inr_a[0] = #20000 1'b0;
	inr_a[0] = #20000 1'b1;
	inr_a[0] = #40000 1'b0;
	inr_a[0] = #20000 1'b1;
	inr_a[0] = #60000 1'b0;
	inr_a[0] = #40000 1'b1;
	inr_a[0] = #40000 1'b0;
	inr_a[0] = #20000 1'b1;
	inr_a[0] = #60000 1'b0;
	inr_a[0] = #20000 1'b1;
	inr_a[0] = #20000 1'b0;
	inr_a[0] = #40000 1'b1;
	inr_a[0] = #20000 1'b0;
	inr_a[0] = #60000 1'b1;
	inr_a[0] = #100000 1'b0;
end 
// inr_a3[ 7 ]
initial
begin
	inr_a3[7] = 1'b0;
end 
// inr_a3[ 6 ]
initial
begin
	inr_a3[6] = 1'b0;
end 
// inr_a3[ 5 ]
initial
begin
	inr_a3[5] = 1'b0;
	inr_a3[5] = #640000 1'b1;
end 
// inr_a3[ 4 ]
initial
begin
	inr_a3[4] = 1'b0;
	inr_a3[4] = #320000 1'b1;
	inr_a3[4] = #320000 1'b0;
	inr_a3[4] = #320000 1'b1;
end 
// inr_a3[ 3 ]
initial
begin
	repeat(3)
	begin
		inr_a3[3] = 1'b0;
		inr_a3[3] = #160000 1'b1;
		# 160000;
	end
	inr_a3[3] = 1'b0;
end 
// inr_a3[ 2 ]
initial
begin
	repeat(6)
	begin
		inr_a3[2] = 1'b0;
		inr_a3[2] = #80000 1'b1;
		# 80000;
	end
	inr_a3[2] = 1'b0;
end 
// inr_a3[ 1 ]
initial
begin
	repeat(12)
	begin
		inr_a3[1] = 1'b0;
		inr_a3[1] = #40000 1'b1;
		# 40000;
	end
	inr_a3[1] = 1'b0;
end 
// inr_a3[ 0 ]
always
begin
	inr_a3[0] = 1'b0;
	inr_a3[0] = #20000 1'b1;
	#20000;
end 
// inr_a2[ 7 ]
initial
begin
	inr_a2[7] = 1'b0;
end 
// inr_a2[ 6 ]
initial
begin
	inr_a2[6] = 1'b0;
end 
// inr_a2[ 5 ]
initial
begin
	inr_a2[5] = 1'b0;
	inr_a2[5] = #640000 1'b1;
end 
// inr_a2[ 4 ]
initial
begin
	inr_a2[4] = 1'b0;
	inr_a2[4] = #320000 1'b1;
	inr_a2[4] = #320000 1'b0;
	inr_a2[4] = #320000 1'b1;
end 
// inr_a2[ 3 ]
initial
begin
	repeat(3)
	begin
		inr_a2[3] = 1'b0;
		inr_a2[3] = #160000 1'b1;
		# 160000;
	end
	inr_a2[3] = 1'b0;
end 
// inr_a2[ 2 ]
initial
begin
	repeat(6)
	begin
		inr_a2[2] = 1'b0;
		inr_a2[2] = #80000 1'b1;
		# 80000;
	end
	inr_a2[2] = 1'b0;
end 
// inr_a2[ 1 ]
initial
begin
	repeat(12)
	begin
		inr_a2[1] = 1'b0;
		inr_a2[1] = #40000 1'b1;
		# 40000;
	end
	inr_a2[1] = 1'b0;
end 
// inr_a2[ 0 ]
always
begin
	inr_a2[0] = 1'b0;
	inr_a2[0] = #20000 1'b1;
	#20000;
end 
endmodule

